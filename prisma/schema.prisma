// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Transactions {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  title        String   @db.VarChar(255)
  content      String?
  valueInCents Int
  published    Boolean  @default(false)
  owner        Users     @relation(fields: [ownerId], references: [id])
  ownerId      Int
  group        Groups    @relation(fields: [groupId], references: [id])
  groupId      Int
}

model Groups {
  id             Int            @id @default(autoincrement())
  title         String        @default("Untitled group")
  bio            String?
  transactions   Transactions[]
  users          UsersInGroup[]
  balanceInCents Int            @default(0)
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
}

model Users {
  id           Int            @id @default(autoincrement())
  email        String         @unique
  name         String?
  avatar       String?
  password     String 
  transactions Transactions[]
  groups       UsersInGroup[]
  role        String          @default("user")
  createdAt   DateTime        @default(now())
  updatedAt    DateTime?      @updatedAt
  
  
}

model UsersInGroup {
  id                 Int      @id @default(autoincrement())
  user               Users     @relation(fields: [userId], references: [id])
  userId             Int
  group              Groups    @relation(fields: [groupId], references: [id])
  groupId            Int
  userBalanceInCents Int      @default(0)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  admin              Boolean
}
